{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport { createEpicMiddleware } from 'redux-observable';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\nimport rootReducer from './reducers';\nimport rootSaga from './sagas';\nimport rootEpic from './epics';\nexport default function configureStore(initialState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const epicMiddleware = createEpicMiddleware();\n  const middlewares = [sagaMiddleware, epicMiddleware, thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n  const store = createStore(rootReducer, initialState, composedEnhancers);\n  sagaMiddleware.run(rootSaga);\n  epicMiddleware.run(rootEpic);\n  return store;\n}","map":{"version":3,"sources":["/Users/sumandontha/Downloads/fe-coding-challenge-master/src/store/index.js"],"names":["createStore","applyMiddleware","thunkMiddleware","createSagaMiddleware","createEpicMiddleware","composeWithDevTools","rootReducer","rootSaga","rootEpic","configureStore","initialState","sagaMiddleware","epicMiddleware","middlewares","middlewareEnhancer","enhancers","composedEnhancers","store","run"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AAEA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AAEA,SAASC,mBAAT,QAAoC,0CAApC;AAEA,OAAOC,WAAP,MAAwB,YAAxB;AACA,OAAOC,QAAP,MAAqB,SAArB;AACA,OAAOC,QAAP,MAAqB,SAArB;AAEA,eAAe,SAASC,cAAT,CAAwBC,YAAxB,EAAsC;AACnD,QAAMC,cAAc,GAAGR,oBAAoB,EAA3C;AACA,QAAMS,cAAc,GAAGR,oBAAoB,EAA3C;AACA,QAAMS,WAAW,GAAG,CAACF,cAAD,EAAiBC,cAAjB,EAAiCV,eAAjC,CAApB;AACA,QAAMY,kBAAkB,GAAGb,eAAe,CAAC,GAAGY,WAAJ,CAA1C;AAEA,QAAME,SAAS,GAAG,CAACD,kBAAD,CAAlB;AACA,QAAME,iBAAiB,GAAGX,mBAAmB,CAAC,GAAGU,SAAJ,CAA7C;AAEA,QAAME,KAAK,GAAGjB,WAAW,CAACM,WAAD,EAAcI,YAAd,EAA4BM,iBAA5B,CAAzB;AAEAL,EAAAA,cAAc,CAACO,GAAf,CAAmBX,QAAnB;AACAK,EAAAA,cAAc,CAACM,GAAf,CAAmBV,QAAnB;AAEA,SAAOS,KAAP;AACD","sourcesContent":["import { createStore, applyMiddleware } from 'redux'\n\nimport thunkMiddleware from 'redux-thunk'\nimport createSagaMiddleware from 'redux-saga'\nimport { createEpicMiddleware } from 'redux-observable'\n\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly'\n\nimport rootReducer from './reducers'\nimport rootSaga from './sagas'\nimport rootEpic from './epics'\n\nexport default function configureStore(initialState) {\n  const sagaMiddleware = createSagaMiddleware()\n  const epicMiddleware = createEpicMiddleware()\n  const middlewares = [sagaMiddleware, epicMiddleware, thunkMiddleware];\n  const middlewareEnhancer = applyMiddleware(...middlewares)\n\n  const enhancers = [middlewareEnhancer]\n  const composedEnhancers = composeWithDevTools(...enhancers)\n\n  const store = createStore(rootReducer, initialState, composedEnhancers)\n\n  sagaMiddleware.run(rootSaga)\n  epicMiddleware.run(rootEpic)\n\n  return store\n}\n"]},"metadata":{},"sourceType":"module"}