{"ast":null,"code":"import { combineReducers } from \"redux\";\nimport { SELECT_CELL } from \"../actions/moves\";\nexport const createBoard = i => Array(i).fill(null).map(_ => Array(i).fill(null));\nexport const board = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : createBoard(3);\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SELECT_CELL:\n      {\n        const newBoard = JSON.parse(JSON.stringify(state));\n        newBoard[action.row][action.col] = action.currentPlayer;\n        return newBoard;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport const game = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    currentPlayer: 'Suman',\n    winner: null\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SELECT_CELL:\n      {\n        return { ...state,\n          currentPlayer: state.currentPlayer === 'X' ? 'O' : 'X'\n        };\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport default combineReducers({\n  board,\n  game\n});","map":{"version":3,"sources":["/Users/sumandontha/Downloads/fe-coding-challenge-master/src/store/reducers/index.js"],"names":["combineReducers","SELECT_CELL","createBoard","i","Array","fill","map","_","board","state","action","type","newBoard","JSON","parse","stringify","row","col","currentPlayer","game","winner"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,WAAW,GAAIC,CAAD,IACzBC,KAAK,CAACD,CAAD,CAAL,CACGE,IADH,CACQ,IADR,EAEGC,GAFH,CAEOC,CAAC,IACJH,KAAK,CAACD,CAAD,CAAL,CACGE,IADH,CACQ,IADR,CAHJ,CADK;AAQP,OAAO,MAAMG,KAAK,GAAG,YAAoC;AAAA,MAAnCC,KAAmC,uEAA3BP,WAAW,CAAC,CAAD,CAAgB;AAAA,MAAXQ,MAAW;;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AAAkB;AAChB,cAAMW,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeN,KAAf,CAAX,CAAjB;AACAG,QAAAA,QAAQ,CAACF,MAAM,CAACM,GAAR,CAAR,CAAqBN,MAAM,CAACO,GAA5B,IAAmCP,MAAM,CAACQ,aAA1C;AACA,eAAON,QAAP;AACD;;AACD;AAAS;AACP,eAAOH,KAAP;AACD;AARH;AAUD,CAXM;AAaP,OAAO,MAAMU,IAAI,GAAG,YAA8D;AAAA,MAA7DV,KAA6D,uEAArD;AAAES,IAAAA,aAAa,EAAE,OAAjB;AAA0BE,IAAAA,MAAM,EAAE;AAAlC,GAAqD;AAAA,MAAXV,MAAW;;AAChF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGQ,KADE;AAELS,UAAAA,aAAa,EAAET,KAAK,CAACS,aAAN,KAAwB,GAAxB,GAA8B,GAA9B,GAAoC;AAF9C,SAAP;AAID;;AACD;AAAS;AACP,eAAOT,KAAP;AACD;AATH;AAWD,CAZM;AAcP,eAAeT,eAAe,CAAC;AAC7BQ,EAAAA,KAD6B;AAE7BW,EAAAA;AAF6B,CAAD,CAA9B","sourcesContent":["import { combineReducers } from \"redux\";\nimport { SELECT_CELL } from \"../actions/moves\";\n\nexport const createBoard = (i) =>\n  Array(i)\n    .fill(null)\n    .map(_ =>\n      Array(i)\n        .fill(null)\n    )\n\nexport const board = (state = createBoard(3), action) => {\n  switch (action.type) {\n    case SELECT_CELL: {\n      const newBoard = JSON.parse(JSON.stringify(state))\n      newBoard[action.row][action.col] = action.currentPlayer\n      return newBoard\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport const game = (state = { currentPlayer: 'Suman', winner: null }, action) => {\n  switch (action.type) {\n    case SELECT_CELL: {\n      return {\n        ...state,\n        currentPlayer: state.currentPlayer === 'X' ? 'O' : 'X'\n      }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\nexport default combineReducers({\n  board,\n  game\n})\n"]},"metadata":{},"sourceType":"module"}