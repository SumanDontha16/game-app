{"ast":null,"code":"var _jsxFileName = \"/Users/sumandontha/Downloads/fe-coding-challenge-master/src/components/board/index.js\";\nimport React, { useState } from 'react';\nimport './index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Square from '../square';\nimport { selectCell } from '../../store/actions/moves';\n\nconst selectBoard = state => state.board;\n\nconst selectGame = state => state.game;\n\nconst getRandomCell = i => Math.floor(Math.random() * i);\n\nexport const Board = () => {\n  const [state, setState] = useState([\"X\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"]);\n  const [player, setPlayer] = useState(\"X\");\n\n  const chooseSquare = sqaure => {\n    setState(state.map((val, idx) => {\n      if (idx === sqaure && val === \"\") {\n        return player;\n      }\n\n      return val;\n    }));\n  };\n\n  const board = useSelector(selectBoard);\n  const game = useSelector(selectGame);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"BoardContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Square, {\n    val: board[0],\n    chooseSquare: () => chooseSquare(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[1],\n    chooseSquare: () => chooseSquare(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[2],\n    chooseSquare: () => chooseSquare(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Square, {\n    val: board[3],\n    chooseSquare: () => chooseSquare(3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[4],\n    chooseSquare: () => chooseSquare(4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[5],\n    chooseSquare: () => chooseSquare(5),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n};\n{\n  /* <div className=\"row\">\n           <Square val={board[0]} chooseSquare={() => chooseSquare(0)} />\n           <Square val={board[1]} chooseSquare={() => chooseSquare(1)} />\n           <Square val={board[2]} chooseSquare={() => chooseSquare(2)} />\n         </div>\n         <div className=\"row\"></div>\n         <div className=\"row\"></div> */\n}\n{\n  /* Board: {JSON.stringify(board)}\n          */\n}","map":{"version":3,"sources":["/Users/sumandontha/Downloads/fe-coding-challenge-master/src/components/board/index.js"],"names":["React","useState","useSelector","useDispatch","Square","selectCell","selectBoard","state","board","selectGame","game","getRandomCell","i","Math","floor","random","Board","setState","player","setPlayer","chooseSquare","sqaure","map","val","idx","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Square from '../square'\nimport { selectCell } from '../../store/actions/moves';\n\nconst selectBoard = (state) => state.board\nconst selectGame = (state) => state.game\n\nconst getRandomCell = (i) => Math.floor(Math.random() * i)\n\nexport const Board = () => {\n  const [state, setState] = useState([\"X\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"])\n  const [player, setPlayer] = useState(\"X\");\n\n  const chooseSquare = (sqaure) => {\n    setState(state.map((val, idx) => {\n      if (idx === sqaure && val === \"\") {\n        return player\n      }\n      return val;\n    }))\n  }\n\n  const board = useSelector(selectBoard)\n  const game = useSelector(selectGame)\n  const dispatch = useDispatch()\n\n  return (\n    <div className=\"BoardContainer\">\n      <div className=\"Board\">\n        <div className=\"row\">\n          <Square val={board[0]} chooseSquare={() => chooseSquare(0)} />\n          <Square val={board[1]} chooseSquare={() => chooseSquare(1)} />\n          <Square val={board[2]} chooseSquare={() => chooseSquare(2)} />\n        </div>\n        <div className=\"row\">\n          <Square val={board[3]} chooseSquare={() => chooseSquare(3)} />\n          <Square val={board[4]} chooseSquare={() => chooseSquare(4)} />\n          <Square val={board[5]} chooseSquare={() => chooseSquare(5)} />\n        </div>\n        <div className=\"row\"></div>\n        {/* <div onClick={() => dispatch(\n          selectCell(\n            game.currentPlayer,\n            getRandomCell(board.length),\n            getRandomCell(board.length)\n          )\n        )}>\n          \n        </div> */}\n      </div>\n    </div>\n  )\n}\n\n{/* <div className=\"row\">\n          <Square val={board[0]} chooseSquare={() => chooseSquare(0)} />\n          <Square val={board[1]} chooseSquare={() => chooseSquare(1)} />\n          <Square val={board[2]} chooseSquare={() => chooseSquare(2)} />\n        </div>\n        <div className=\"row\"></div>\n        <div className=\"row\"></div> */}\n{/* Board: {JSON.stringify(board)}\n         */}"]},"metadata":{},"sourceType":"module"}