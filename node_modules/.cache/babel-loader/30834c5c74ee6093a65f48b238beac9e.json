{"ast":null,"code":"var _jsxFileName = \"/Users/sumandontha/Downloads/fe-coding-challenge-master/src/components/board/index.js\";\nimport React, { useState } from 'react';\nimport './index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Square from '../square';\nimport { selectCell } from '../../store/actions/moves';\n\nconst selectBoard = state => state.board;\n\nconst selectGame = state => state.game;\n\nconst getRandomCell = i => Math.floor(Math.random() * i);\n\nexport const Board = () => {\n  const board = useSelector(selectBoard);\n  const game = useSelector(selectGame);\n  const dispatch = useDispatch();\n  let status;\n\n  if (winner) {\n    status = `Winner ${winner}`;\n  } else if (history.length === i) {\n    status = 'Draw. No one won.';\n  } else {\n    status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"BoardContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, board.map(b => {\n    {\n      b.map(item => console.log(item));\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(selectCell(game.currentPlayer, getRandomCell(board.length), getRandomCell(board.length))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, game.currentPlayer)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, status));\n};","map":{"version":3,"sources":["/Users/sumandontha/Downloads/fe-coding-challenge-master/src/components/board/index.js"],"names":["React","useState","useSelector","useDispatch","Square","selectCell","selectBoard","state","board","selectGame","game","getRandomCell","i","Math","floor","random","Board","dispatch","status","winner","history","length","xIsNext","map","b","item","console","log","currentPlayer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,aAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,UAAT,QAA2B,2BAA3B;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAWA,KAAK,CAACC,KAArC;;AACA,MAAMC,UAAU,GAAIF,KAAD,IAAWA,KAAK,CAACG,IAApC;;AAEA,MAAMC,aAAa,GAAIC,CAAD,IAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,CAA3B,CAA7B;;AAGA,OAAO,MAAMI,KAAK,GAAG,MAAM;AACzB,QAAMR,KAAK,GAAGN,WAAW,CAACI,WAAD,CAAzB;AACA,QAAMI,IAAI,GAAGR,WAAW,CAACO,UAAD,CAAxB;AACA,QAAMQ,QAAQ,GAAGd,WAAW,EAA5B;AAEA,MAAIe,MAAJ;;AACA,MAAIC,MAAJ,EAAY;AACVD,IAAAA,MAAM,GAAI,UAASC,MAAO,EAA1B;AACD,GAFD,MAEO,IAAIC,OAAO,CAACC,MAAR,KAAmBT,CAAvB,EAA0B;AAC/BM,IAAAA,MAAM,GAAG,mBAAT;AACD,GAFM,MAEA;AACLA,IAAAA,MAAM,GAAI,gBAAe,KAAKX,KAAL,CAAWe,OAAX,GAAqB,GAArB,GAA2B,GAAI,EAAxD;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,CAACe,GAAN,CAAWC,CAAD,IAAO;AAChB;AAAEA,MAAAA,CAAC,CAACD,GAAF,CAAOE,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAAhB;AAAoC;AACvC,GAFA,CADH,eAKE;AAAQ,IAAA,OAAO,EAAE,MAAMR,QAAQ,CAC7BZ,UAAU,CACRK,IAAI,CAACkB,aADG,EAERjB,aAAa,CAACH,KAAK,CAACa,MAAP,CAFL,EAGRV,aAAa,CAACH,KAAK,CAACa,MAAP,CAHL,CADmB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGX,IAAI,CAACkB,aAPR,CALF,CADF,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMV,MAAN,CAhBF,CADF;AAoBD,CAlCM","sourcesContent":["import React, { useState } from 'react';\nimport './index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Square from '../square'\nimport { selectCell } from '../../store/actions/moves';\n\nconst selectBoard = (state) => state.board\nconst selectGame = (state) => state.game\n\nconst getRandomCell = (i) => Math.floor(Math.random() * i)\n\n\nexport const Board = () => {\n  const board = useSelector(selectBoard)\n  const game = useSelector(selectGame)\n  const dispatch = useDispatch()\n\n  let status;\n  if (winner) {\n    status = `Winner ${winner}`;\n  } else if (history.length === i) {\n    status = 'Draw. No one won.';\n  } else {\n    status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\n  }\n\n  return (\n    <div className=\"BoardContainer\">\n      <div className=\"Board\">\n        {board.map((b) => {\n          { b.map((item) => console.log(item)) }\n        })}\n        {/* Board: {JSON.stringify(board)} */}\n        <button onClick={() => dispatch(\n          selectCell(\n            game.currentPlayer,\n            getRandomCell(board.length),\n            getRandomCell(board.length)\n          )\n        )}>\n          {game.currentPlayer}\n        </button>\n      </div>\n      <div>{status}</div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}