{"ast":null,"code":"var _jsxFileName = \"/Users/sumandontha/Downloads/fe-coding-challenge-master/src/components/board/index.js\";\nimport React, { useState } from 'react';\nimport './index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Square from '../square';\nimport { selectCell } from '../../store/actions/moves';\n\nconst selectBoard = state => state.board;\n\nconst selectGame = state => state.game;\n\nconst getRandomCell = i => Math.floor(Math.random() * i);\n\nexport const Board = () => {\n  const board = useSelector(selectBoard);\n  const game = useSelector(selectGame);\n  const dispatch = useDispatch();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"BoardContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Square, {\n    val: board[0],\n    chooseSquare: () => {\n      alert(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[1],\n    chooseSquare: () => {\n      alert(1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[2],\n    chooseSquare: () => {\n      alert(2);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Square, {\n    val: board[3],\n    chooseSquare: () => {\n      alert(3);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[4],\n    chooseSquare: () => {\n      alert(4);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[5],\n    chooseSquare: () => {\n      alert(5);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Square, {\n    val: board[6],\n    chooseSquare: () => {\n      alert(6);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[7],\n    chooseSquare: () => {\n      alert(7);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[8],\n    chooseSquare: () => {\n      alert(8);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(selectCell(game.currentPlayer, getRandomCell(board.length), getRandomCell(board.length))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, game.currentPlayer)));\n};","map":{"version":3,"sources":["/Users/sumandontha/Downloads/fe-coding-challenge-master/src/components/board/index.js"],"names":["React","useState","useSelector","useDispatch","Square","selectCell","selectBoard","state","board","selectGame","game","getRandomCell","i","Math","floor","random","Board","dispatch","alert","currentPlayer","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Square from '../square'\nimport { selectCell } from '../../store/actions/moves';\n\nconst selectBoard = (state) => state.board\nconst selectGame = (state) => state.game\n\nconst getRandomCell = (i) => Math.floor(Math.random() * i)\n\n\nexport const Board = () => {\n  const board = useSelector(selectBoard)\n  const game = useSelector(selectGame)\n  const dispatch = useDispatch()\n\n\n  return (\n    <div className=\"BoardContainer\">\n      <div className=\"Board\">\n        <div className=\"row\">\n          <Square val={board[0]} chooseSquare={() => { alert(0) }} />\n          <Square val={board[1]} chooseSquare={() => { alert(1) }} />\n          <Square val={board[2]} chooseSquare={() => { alert(2) }} />\n        </div>\n        <div className=\"row\">\n          <Square val={board[3]} chooseSquare={() => { alert(3) }} />\n          <Square val={board[4]} chooseSquare={() => { alert(4) }} />\n          <Square val={board[5]} chooseSquare={() => { alert(5) }} />\n        </div>\n        <div className=\"row\">\n          <Square val={board[6]} chooseSquare={() => { alert(6) }} />\n          <Square val={board[7]} chooseSquare={() => { alert(7) }} />\n          <Square val={board[8]} chooseSquare={() => { alert(8) }} />\n        </div>\n\n        {/* {board.map((b) => {\n          { b.map((item) => <button>{item}</button>) }\n        })} */}\n        {/* Board: {JSON.stringify(board)} */}\n        <button onClick={() => dispatch(\n          selectCell(\n            game.currentPlayer,\n            getRandomCell(board.length),\n            getRandomCell(board.length)\n          )\n        )}>\n          {game.currentPlayer}\n        </button>\n      </div>\n\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}