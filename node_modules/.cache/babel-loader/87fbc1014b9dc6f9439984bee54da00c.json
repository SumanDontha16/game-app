{"ast":null,"code":"var _jsxFileName = \"/Users/sumandontha/Downloads/fe-coding-challenge-master/src/components/board/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport './index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Square from '../square';\nimport { Patterns } from '../patterns';\nimport { selectCell } from '../../store/actions/moves';\n\nconst selectBoard = state => state.board;\n\nconst selectGame = state => state.game;\n\nconst getRandomCell = i => Math.floor(Math.random() * i);\n\nexport const Board = () => {\n  const board = useSelector(selectBoard);\n  const game = useSelector(selectGame);\n  const dispatch = useDispatch();\n  const [player, setPlayer] = useState(game.currentPlayer);\n  const [result, setResult] = useState({\n    winner: \"none\",\n    state: \"none\"\n  }); // useEffect(() => {\n  //   checkWin()\n  //   if (player === \"X\") {\n  //     setPlayer(\"0\")\n  //   } else {\n  //     setPlayer(\"X\")\n  //   }\n  // }, [board])\n\n  useEffect(() => {\n    if (result.state !== \"none\") {\n      alert(`Game Finished! Winning Player: ${result.winner}`);\n    }\n  }, [result]);\n\n  const chooseSquare = sqaure => {\n    board.map((val, idx) => console.log(val));\n  }; // board.map((val) => {\n  //   val.map((item, idx) => {\n  //     if (idx === sqaure && item === \"\") {\n  //       return player\n  //     }\n  //     return item\n  //   })\n  //   if (player === \"X\") {\n  //     setPlayer(\"0\")\n  //   } else {\n  //     setPlayer(\"X\")\n  //   }\n  // })\n  // const checkWin = () => {\n  //   Patterns.forEach((currentPattern) => {\n  //     const firstPlayer = board[currentPattern[0]];\n  //     if (firstPlayer === \"\") return;\n  //     let foundWinnerPattern = true;\n  //     currentPattern.forEach((idx) => {\n  //       if (board[idx] !== firstPlayer) {\n  //         foundWinnerPattern = false\n  //       }\n  //     })\n  //     if (foundWinnerPattern) {\n  //       setResult({ winner: player, state: \"won\" })\n  //     }\n  //   })\n  // }\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"BoardContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Square, {\n    val: board[0],\n    chooseSquare: () => chooseSquare(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[1],\n    chooseSquare: () => chooseSquare(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[2],\n    chooseSquare: () => chooseSquare(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Square, {\n    val: board[3],\n    chooseSquare: () => chooseSquare(3),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[4],\n    chooseSquare: () => chooseSquare(4),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[5],\n    chooseSquare: () => chooseSquare(5),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Square, {\n    val: board[6],\n    chooseSquare: () => chooseSquare(6),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[7],\n    chooseSquare: () => chooseSquare(7),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Square, {\n    val: board[8],\n    chooseSquare: () => chooseSquare(8),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => dispatch(selectCell(game.currentPlayer, getRandomCell(board.length), getRandomCell(board.length))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, game.currentPlayer)));\n};","map":{"version":3,"sources":["/Users/sumandontha/Downloads/fe-coding-challenge-master/src/components/board/index.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Square","Patterns","selectCell","selectBoard","state","board","selectGame","game","getRandomCell","i","Math","floor","random","Board","dispatch","player","setPlayer","currentPlayer","result","setResult","winner","alert","chooseSquare","sqaure","map","val","idx","console","log","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Square from '../square'\nimport { Patterns } from '../patterns'\nimport { selectCell } from '../../store/actions/moves';\n\nconst selectBoard = (state) => state.board\nconst selectGame = (state) => state.game\n\nconst getRandomCell = (i) => Math.floor(Math.random() * i)\n\nexport const Board = () => {\n  const board = useSelector(selectBoard)\n  const game = useSelector(selectGame)\n  const dispatch = useDispatch()\n\n  const [player, setPlayer] = useState(game.currentPlayer)\n  const [result, setResult] = useState({ winner: \"none\", state: \"none\" })\n\n  // useEffect(() => {\n  //   checkWin()\n  //   if (player === \"X\") {\n  //     setPlayer(\"0\")\n  //   } else {\n  //     setPlayer(\"X\")\n  //   }\n  // }, [board])\n\n  useEffect(() => {\n    if (result.state !== \"none\") {\n      alert(`Game Finished! Winning Player: ${result.winner}`)\n    }\n  }, [result])\n\n  const chooseSquare = sqaure => {\n    board.map((val, idx) => console.log(val))\n  }\n\n\n  // board.map((val) => {\n  //   val.map((item, idx) => {\n  //     if (idx === sqaure && item === \"\") {\n  //       return player\n  //     }\n  //     return item\n  //   })\n  //   if (player === \"X\") {\n  //     setPlayer(\"0\")\n  //   } else {\n  //     setPlayer(\"X\")\n  //   }\n  // })\n\n  // const checkWin = () => {\n  //   Patterns.forEach((currentPattern) => {\n  //     const firstPlayer = board[currentPattern[0]];\n  //     if (firstPlayer === \"\") return;\n  //     let foundWinnerPattern = true;\n  //     currentPattern.forEach((idx) => {\n  //       if (board[idx] !== firstPlayer) {\n  //         foundWinnerPattern = false\n  //       }\n  //     })\n  //     if (foundWinnerPattern) {\n  //       setResult({ winner: player, state: \"won\" })\n  //     }\n  //   })\n  // }\n\n  return (\n    <div className=\"BoardContainer\">\n      <div className=\"Board\">\n        <div className=\"row\">\n          <Square val={board[0]} chooseSquare={() => chooseSquare(0)} />\n          <Square val={board[1]} chooseSquare={() => chooseSquare(1)} />\n          <Square val={board[2]} chooseSquare={() => chooseSquare(2)} />\n        </div>\n        <div className=\"row\">\n          <Square val={board[3]} chooseSquare={() => chooseSquare(3)} />\n          <Square val={board[4]} chooseSquare={() => chooseSquare(4)} />\n          <Square val={board[5]} chooseSquare={() => chooseSquare(5)} />\n        </div>\n        <div className=\"row\">\n          <Square val={board[6]} chooseSquare={() => chooseSquare(6)} />\n          <Square val={board[7]} chooseSquare={() => chooseSquare(7)} />\n          <Square val={board[8]} chooseSquare={() => chooseSquare(8)} />\n        </div>\n        <button onClick={() => dispatch(\n          selectCell(\n            game.currentPlayer,\n            getRandomCell(board.length),\n            getRandomCell(board.length)\n          )\n        )}>\n          {game.currentPlayer}\n        </button>\n      </div>\n\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}